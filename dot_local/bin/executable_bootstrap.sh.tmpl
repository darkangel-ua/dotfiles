#!/bin/bash

# in lxc containers there is no ~/.cache directory
[ ! -e ~/.cache ] && mkdir ~/.cache

# basic system stuff
sudo apt -y install pip mc curl git
sudo pip install powerline-status netifaces

if ! which starship > /dev/null || [[ $(starship --version | head -n 1 | cut -f 2 -d ' ') != '1.22.1' ]]; then
    curl -sS https://starship.rs/install.sh | sudo sh -s - -y -v v1.22.1
fi

# rg command https://github.com/BurntSushi/ripgrep
if ! which rg > /dev/null || [[ $(rg --version | head -n 1 | cut -f 2 -d ' ') != "14.1.1" ]] ; then
    wget https://github.com/BurntSushi/ripgrep/releases/download/14.1.1/ripgrep_14.1.1-1_amd64.deb
    sudo dpkg -i ripgrep_14.1.1-1_amd64.deb
    rm ripgrep_14.1.1-1_amd64.deb
fi

# fd command https://github.com/sharkdp/fd
# it is used in telescope.nvim mostly
if ! which fd > /dev/null || [[ $(fd --version) != "fd 10.2.0" ]]; then
    wget https://github.com/sharkdp/fd/releases/download/v10.2.0/fd_10.2.0_amd64.deb
    sudo dpkg -i fd_10.2.0_amd64.deb
    rm fd_10.2.0_amd64.deb
fi

# fzf
if ! which fzf > /dev/null; then
    git clone -b v0.60.0 --depth 1 https://github.com/junegunn/fzf.git ~/.fzf && ~/.fzf/install --all
fi

# fzf tab completion
if [ ! -e ~/.fzf-tab-completion/bash/fzf-bash-completion.sh ]; then
    git clone https://github.com/lincheney/fzf-tab-completion ~/.fzf-tab-completion
fi

if ! which zoxide > /dev/null; then
    curl -sSfL https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | sh
fi

# exa
if ! which exa > /dev/null; then
    tmp=$(mktemp -d)
    pushd "$tmp"
    wget https://github.com/ogham/exa/releases/download/v0.10.1/exa-linux-x86_64-v0.10.1.zip
    unzip exa-linux-x86_64-v0.10.1.zip
    sudo chown root:root ./bin/exa
    sudo cp ./bin/exa /usr/local/bin/
    popd
    rm -rf "$tmp"
fi

# vivid to create LS_COLORS easily
if ! which vivid > /dev/null; then
    wget https://github.com/sharkdp/vivid/releases/download/v0.7.0/vivid_0.7.0_amd64.deb
    sudo dpkg -i vivid_0.7.0_amd64.deb
    rm vivid_0.7.0_amd64.deb
fi

snap list | grep btop -cq && sudo snap remove btop
if ! which btop > /dev/null || [[ $(btop --version | head -n 1) != "btop version: 1.4.0" ]]; then
    tmp=$(mktemp -d)
    pushd "$tmp"
    wget https://github.com/aristocratos/btop/releases/download/v1.4.0/btop-x86_64-linux-musl.tbz
    tar -xvf btop-x86_64-linux-musl.tbz
    cd btop
    ./install.sh
    popd
    rm -rf "$tmp"
fi

# nvim
# remove deb variant first if any
sudo apt remove neovim

if ! which nvim > /dev/null || [[ $(nvim --version | grep "NVIM v" | cut -f 2 -d ' ') != "v0.11.4" ]]; then
    wget https://github.com/neovim/neovim/releases/download/v0.11.4/nvim-linux-x86_64.appimage
    sudo chown root:root nvim-linux-x86_64.appimage
    sudo mv -f nvim-linux-x86_64.appimage /usr/local/bin/
    sudo chmod +x /usr/local/bin/nvim-linux-x86_64.appimage

    [ ! -e /usr/local/bin/nvim ] && { cd /usr/local/bin; sudo ln -s nvim-linux-x86_64.appimage nvim; }

    # nvim Python integration module
    sudo pip install neovim
    # this is needed otherwise yank to system clipboard will not work
    sudo apt -y install xclip
fi

# fontconfig required
#   sudo apt -y fontconfig
#
# Hack Nerd font
if which fc-list && [[ $(fc-list | grep -m 1 -c "Hack Nerd") == '0' ]]; then
    sudo mkdir /usr/local/share/fonts/Hack
    tmp=`mktemp`
    wget https://github.com/ryanoasis/nerd-fonts/releases/download/v3.3.0/Hack.zip -O "$tmp"
    sudo unzip "$tmp" -d /usr/local/share/fonts/Hack
    rm "$tmp"
    sudo fc-cache -f -v
fi

{{ if $.cpp_dev_tools -}}
# development tools
sudo apt -y install ninja-build ccache distcc
sudo snap install cmake --classic

# setup ccache - not the perfect way to do this, but it's the only way if `make` is not ready for ccache support
for i in $(fd --base-directory /usr/bin "^g(cc|\+\+)(-\d+(\.\d+)?)?$"); do
    ln -sf /usr/bin/ccache ~/.local/bin/$i
done
{{- end }}

