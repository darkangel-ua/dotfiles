set -g default-terminal "xterm-256color"

# Enable RGB colour
set-option -sa terminal-overrides ",xterm*:RGB"

# nvim recomends to set escape time to less then 300ms
set-option -sg escape-time 10
# nvim recomends to set this
set-option -g focus-events on
# use vi copy mode
setw -g mode-keys vi
# count from 1
set -g base-index 1

# Change prefix to Ctrl-a
unbind C-b
set-option -g prefix C-a

# easy to reload config on the fly
bind r if-shell '[ -e ~/.tmux.conf ]' \
    { source-file ~/.tmux.conf; display-message -d 1000 "Config has been reloaded" } \
    { source-file ~/.config/tmux/tmux.conf; display-message -d 1000 "Config has been reloaded" }

# Easy bindings for split
unbind %
bind / split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'
# no prefix variants for splits
bind -n M-/ split-window -h -c '#{pane_current_path}'
bind -n M-o split-window -v -c '#{pane_current_path}'

# unbind Space because I dont use this functionality
# but always mess layout unintentionally
unbind Space

# this one needed to cancel previos prefix
bind C-a send-prefix

# let's try to use Alt to get rid of prefix chording
# window switching via Alt and left home row
bind -n M-a select-window -t 1
bind -n M-s select-window -t 2
bind -n M-d select-window -t 3
bind -n M-f select-window -t 4
# zooming
bind -n M-z resize-pane -Z

# vim like pane movements with M(Alt)-hjkl
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator#switching-between-host-panes-doesnt-work-when-docker-is-running
if-shell '[ `systemd-detect-virt` == "none" ]' \
  "is_vim=ps -o state=,comm=,cgroup= -t '#{pane_tty}' \
      | grep -ivE '^.+ +.+ +.+\\/docker\\/.+$' \
      | grep -ivE '\.lxc$' \
      | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)? +'"
  "is_vim=ps -o state=,comm= -t '#{pane_tty}' \
      | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# pane movements via Alt + vim keys
bind-key -n 'M-h' if-shell "$is_vim" { send-keys M-h } { select-pane -L }
bind-key -n 'M-j' if-shell "$is_vim" { send-keys M-j } { select-pane -D }
bind-key -n 'M-k' if-shell "$is_vim" { send-keys M-k } { select-pane -U }
bind-key -n 'M-l' if-shell "$is_vim" { send-keys M-l } { select-pane -R }
# resize
bind-key -n 'M-Left'  resize-pane -L
bind-key -n 'M-Right' resize-pane -R
bind-key -n 'M-Up'    resize-pane -U
bind-key -n 'M-Down'  resize-pane -D

bind-key -n 'C-M-Left'  resize-pane -L 5
bind-key -n 'C-M-Right'  resize-pane -R 5
bind-key -n 'C-M-Down'  resize-pane -D 5
bind-key -n 'C-M-Up'  resize-pane -U 5

# copy mode stuff
bind-key -n 'M-;' copy-mode
bind-key -T copy-mode-vi 'C-k' send-keys -X halfpage-up
bind-key -T copy-mode-vi 'C-j' send-keys -X halfpage-down

# helper screens
bind -n M-t if-shell -b "tmux list-windows | egrep '^9:'" { select-window -t 9 } { new-window -t 9 'btop' }

# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l

# we use two different tmux verions on Ubuntu 16 and 20 so need to choose correct command variant
if-shell -b '[[ `lsb_release -c | grep -c focal` == '0' ]]' "bind S choose-tree -s" "bind S choose-tree -Zs"

source $POWERLINE_DIST_PATH/powerline/bindings/tmux/powerline.conf
